/* Drawer Album – gallery layout
   Plain CSS, no build step (ideal for GitHub Pages)
-------------------------------------------------- */

/* 1) Base reset & sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  /* soft vertical gradient background */
  background: linear-gradient(to bottom, #eff5ff, #c3cfe2);
  /* center the gallery on the page */
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100svh; /* mobile-safe viewport unit */
}

/* 2) Gallery container */
.container {
  display: flex;
  flex: 1;
  max-width: 1440px;
  padding: 0 3rem;
  margin: 0 auto;
  overflow: auto;
  align-items: flex-start;
  justify-content: center;
  gap: 0; /* spacing is handled by .card-inner margin */
  /* allow wrapping on narrow screens */
  flex-wrap: wrap;
}

/* 3) Card – base */
.card {
  /* flexible items that can grow/shrink */
  flex: 1 1 1%;
  position: relative;
  opacity: 0.2;
  transition: flex-basis 600ms cubic-bezier(0.25, 1, 0.5, 1), opacity 250ms ease;
}

/* Expand hovered card to ~30% of the row for a drawer feel */
.card:hover {
  flex-basis: 30%;
}

/* 4) Card inner surface */
.card-inner {
  margin: 0.25rem;
  background: #fff;
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  /* subtle elevation */
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08);
}

/* 5) Media block – picture fills the card */
.card picture {
  width: 100%;
  /* Prefer modern aspect-ratio; fallback provided below */
  aspect-ratio: 2 / 3;
  position: relative;
  overflow: hidden;
}

/* Fallback for browsers without aspect-ratio:
   remove if you don't need legacy support */
@supports not (aspect-ratio: 1) {
  .card picture {
    height: 0;
    padding-bottom: 150%; /* 2:3 aspect (100% * 3/2) */
  }
}

.card picture img {
  display: block;
  position: absolute; /* absolute for the fallback, harmless otherwise */
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

/* 6) Active/hovered state – bring to full opacity */
.card.is-active,
.card:hover {
  opacity: 1;
}

/* 7) Staggered vertical offsets for a layered look */
.card:nth-child(2),
.card:nth-child(5),
.card:nth-child(9) {
  margin-top: 0;
}
.card:nth-child(2),
.card:nth-child(4),
.card:nth-child(6),
.card:nth-child(8),
.card:nth-child(10) {
  margin-top: 2.5%;
}
.card:nth-child(3),
.card:nth-child(7) {
  margin-top: 5%;
}

/* 8) Mobile & small screens: stack and soften the hover effect */
@media (max-width: 768px) {
  .container {
    padding: 0 1rem;
  }
  .card {
    flex: 1 1 48%; /* two per row */
    opacity: 1; /* keep visible on touch devices */
  }
  .card:hover {
    flex-basis: 48%; /* prevent jumpy layout on touch */
  }
}

/* Very small screens: single column */
@media (max-width: 480px) {
  .card {
    flex: 1 1 100%;
  }
  .card:hover {
    flex-basis: 100%;
  }
}

/* 9) Motion preference – reduce animation if user requests it */
@media (prefers-reduced-motion: reduce) {
  .card {
    transition: none;
  }
}
